package com.google.common.hash;

import O1.j;
import java.nio.ByteBuffer;

@j
@k
final class com.google.common.hash.j extends c {
    static final class a extends f {
        private boolean d;
        private int e;
        private int f;
        private int g;
        private int h;
        static final int[] i = null;
        static final int[][] j = null;
        static final int k = -287056435;
        private static final ByteBuffer l;

        static {
            a.i = new int[]{0, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, -946170081, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB, 0x8AD958CF, 2024987596, 1809983544, -1719030981, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24, 0x105EC76F, 0xE235446C, -244992104, 0x30E349B, -675000208, 0x25AFD373, 0x36FF2087, 0xC494A384, 0x9A879FA0, 1760304291, 2075979607, -1982370732, 0x5D1D08BF, 0xAF768BBC, 0xBC267848, 0x4E4DFB4B, 0x20BD8EDE, 0xD2D60DDD, 0xC186FE29, 871202090, 0xE72719C1, 357341890, 102525238, 0xF477EA35, 0xAA64D611, 0x580F5512, 0x4B5FA6E6, 0xB93425E5, 0x6DFE410E, 0x9F95C20D, 0x8CC531F9, 0x7EAEB2FA, 820201905, -1031222606, 0xD1D83946, 0x23B3BA45, -143008082, 85089709, 0x1642AE59, -467063462, -1170599554, 1213305469, 0x5B016189, 0xA96AE28A, 0x7DA08661, 0x8FCB0562, -1667500394, 0x6EF07595, 1098587580, 0xB3109EBF, 0xA0406D4B, 1378610760, -2032039261, 0x748A09A0, 1742404180, 0x95B17957, 0xCBA24573, 0x39C9C670, 714683780, 0xD8F2B687, 205050476, -28094097, 0xED03A29B, 526918040, 0x5125DAD3, 0xA34E59D0, 0xB01EAA24, 1114974503, 0x96BF4DCC, 0x64D4CECF, 2005155131, 0x85EFBE38, -604208612, 0x2997011F, 0x3AC7F2EB, 0xC8AC71E8, 0x1C661503, 0xEE0D9600, -44210700, 0xF36E6F7, 1640403810, 0x93AD1061, 0x80FDE395, 0x72966096, 0xA65C047D, 1412925310, 0x4767748A, 0xB50CF789, 0xEB1FCBAD, 427051182, 170179418, 0xF84F3859, 0x2C855CB2, 0xDEEEDFB1, 0xCDBE2C45, 0x3FD5AF46, 1905808397, 0x83F3D70E, 0x90A324FA, 0x62C8A7F9, 0xB602C312, 0x44694011, 0x5739B3E5, 0xA55230E6, 0xFB410CC2, 0x92A8FC1, 444234805, 0xE811FF36, 1021025245, -827320098, 0xDDE0EB2A, 0x2F8B6829, 0x82F63B78, 0x709DB87B, 0x63CD4B8F, -1851340660, 0x456CAC67, 0xB7072F64, 0xA457DC90, 0x563C5F93, 0x82F63B7, 0xFA44E0B4, -384560320, 0x1B7F9043, 0xCFB5F4A8, 1037989803, 0x2E8E845F, 0xDCE5075C, 0x92A8FC17, 0x60C37F14, 0x73938CE0, 0x81F80FE3, 0x55326B08, 0xA759E80B, 0xB4091BFF, 0x466298FC, 410100952, 0xEA1A27DB, 0xF94AD42F, 186734380, 0xDFEB33C7, 0x2D80B0C4, 1053836080, -860110797, -1572096602, 0x502036A5, 0x4370C551, -1323612590, 1708204729, 0x97BAA1BA, -2065018290, 0x7681D14D, 680717673, 0xDAF96E6A, -911630946, 1002577565, 0xEF087A76, 0x1D63F975, 0xE330A81, -61306494, -1307217207, 0x407EF1CA, 0x532E023E, -1589280451, 0x758FE5D6, -2015074603, -1800104671, 0x66DF1622, 0x38CC2A06, 0xCAA7A905, 0xD9F75AF1, 0x2B9CD9F2, -11092711, 222117402, 510512622, 0xEC064EED, -1014159676, 837199303, 0x22B65633, 0xD0DDD530, 0x417B1DB, -159632680, -450051796, 0x1747422F, 1230274059, 0xBB3FFD08, 0xA86F0EFC, 0x5A048DFF, -1899042540, 2091215383, 0x6FF599E3, 0x9D9E1AE0, -741088853, 565732008, 854102364, -1065151905, 340358836, 0xE622F5B7, 0xF5720643, 0x7198540, 0x590AB964, 0xAB613A67, -1204696685, 0x4A5A4A90, 0x9E902E7B, 0x6CFBAD78, 0x7FAB5E8C, -1916740209, -483350502, 0x115B2B19, 0x20BD8ED, 0xF0605BEE, 0x24AA3F05, 0xD6C1BC06, 0xC5914FF2, 0x37FACCF1, 0x69E9F0D5, 0x9B8273D6, 0x88D28022, 0x7AB90321, -1368168502, 1545135305, 1330124605, 0xBD23943E, 0xF36E6F75, 0x105EC76, 0x12551F82, 0xE03E9C81, 0x34F4F86A, 0xC69F7B69, 0xD5CF889D, 665062302, 2042050490, -1948470087, 0x988C474D, 0x6AE7C44E, -1104306011, 1279665062, 0x5F16D052, 0xAD7D5351};
            a.j = new int[][]{new int[]{0, 0x30D23865, 0x61A470CA, 0x517648AF, -1018633836, 0xF39AD9F1, 0xA2EC915E, -1841387205, -2088913447, -1280340548, -489044717, 0xD20BFD76, 0x4035544D, 0x70E76C28, 563160199, 289610978, 0x3171D43, 0x33C52526, 0x62B36D89, 1382110700, 0xC05FFCD7, 0xF08DC4B2, 0xA1FB8C1D, -1859537800, -2140493670, 0xB0B890FF, -506537904, 0xD11CE035, 0x4322490E, 0x73F0716B, 0x228639C4, 0x125401A1, 103692934, 0x36FC02E3, 0x678A4A4C, 0x57587229, -983114990, 0xF5B4E377, -1530745896, 0x941093BD, 0x85538F5F, -1249790150, 0xE4F7FF95, 0xD425C7F0, 1176202955, 1992906414, 0x27BF1E01, 393029220, 0x53927C5, 904601504, 0x649D570F, 0x544F6F6A, 0xC671C651, 0xF6A3FE34, -1479166309, 0x97078EFE, -2042326500, 0xB696AA79, 0xE7E0E2D6, -684533069, 0x450C7388, 1977502701, 0x24A80342, 0x147A3B27, 0xC5C750C, 1015958889, 0x6DF805C6, 1563049379, 0xCF149498, 0xFFC6ACFD, 0xAEB0E452, 0x9E62DC37, 0x8F21C0D5, 0xBFF3F8B0, 0xEE85B01F, 0xDE57887A, 1281958209, 2092636452, 768430475, 0x1D1F69EE, 0xF4B684F, 0x3F99502A, 0x6EEF1885, 0x5E3D20E0, 0xCC0389DB, 0xFCD1B1BE, 0xADA7F911, 0x9D75C174, 0x8C36DD96, 0xBCE4E5F3, -309154468, -582970055, 0x4F7E3C02, 0x7FAC0467, 786058440, 503870637, 0xA724F8A, 0x3AA077EF, 1809203008, 0x5B040725, -918901218, -102197637, 0xA89EDED4, 0x984CE6B1, 0x890FFA53, 0xB9DDC236, -391411047, 0xD879B2FC, 0x4A471BC7, 2056594338, 0x2BE36B0D, 0x1B315368, 0x96552C9, 968321708, 0x68C12203, 1477646950, -902974627, 0xFAFF8B38, -1417034857, 0x9B5BFBF2, 0x8A18E710, 0xBACADF75, 0xEBBC97DA, -613503041, 0x49500684, 2038578913, 687109710, 405163563, 0x18B8EA18, 678089341, 2031917778, 0x49CEA2B7, 0xDBF00B8C, -350080023, 0xBA547B46, -1970912477, 0x9BC55FC1, -1424529500, 0xFA612F0B, 0xCAB3176E, 1485684309, 0x685F8630, 0x3929CE9F, 0x9FBF6FA, 0x1BAFF75B, 0x2B7DCF3E, 0x7A0B8791, 0x4AD9BFF4, 0xD8E716CF, -399167830, 0xB9436605, 0x89915E60, -1731050878, 0xA8007AE7, -109694392, 0xC9A40A2D, 1536860950, 1799920499, 0x3A3ED3DC, 183299001, 513200286, 0x2E44E8FB, 0x7F32A054, 0x4FE09831, 0xDDDE310A, 0xED0C096F, 0xBC7A41C0, 0x8CA879A5, 0x9DEB6547, 0xAD395D22, -61926003, 0xCC9D2DE8, 0x5EA384D3, 0x6E71BCB6, 0x3F07F419, 0xFD5CC7C, 495046109, 0x2D53F5B8, 2082848023, 0x4CF78572, 0xDEC92C49, -300215252, 0xBF6D5C83, 0x8FBF64E6, 0x9EFC7804, 0xAE2E4061, -11007794, 0xCF8A30AB, 0x5DB49990, 0x6D66A1F5, 1007741274, 0xCC2D13F, 0x14E49F14, 607561585, 0x7540EFDE, 0x4592D7BB, 0xD7AC7E80, 0xE77E46E5, 0xB6080E4A, -2032519633, 0x97992ACD, 0xA74B12A8, 0xF63D5A07, 0xC6EF6262, 1423035225, 0x6403F33C, 896908179, 0x5A783F6, 0x17F38257, 0x2721BA32, 0x7657F29D, 0x4685CAF8, 0xD4BB63C3, -462857306, 0xB51F1309, -2050151572, -1802618994, 0xA45C0FEB, -181778620, 0xC5F87F21, 1472648730, 0x6714EE7F, 0x3662A6D0, 0x6B09EB5, 315270546, 0x22189DF7, 0x736ED558, 0x43BCED3D, 0xD1824406, 0xE1507C63, 0xB02634CC, 0x80F40CA9, 0x91B7104B, -1587206098, 0xF0136081, -1061070620, 0x52FFF1DF, 1647167930, 0x335B8115, 0x389B970, 0x11DDB8D1, 0x210F80B4, 0x7079C81B, 1085010046, 0xD2955945, 0xE2476120, 0xB331298F, -2082270742, 0x92A00D08, 0xA272356D, -217809470, -1009367641, 1374219420, 0x613AD4F9, 0x304C9C56, 10396723}, new int[]{0, 0x54075546, 0xA80EAA8C, 0xFC09FFCA, 0x55F123E9, 0x1F676AF, 0xFDFF8965, -1443308509, 0xABE247D2, 0xFFE51294, 65858910, 1475065880, 0xFE13643B, 0xAA14317D, 1444794039, 0x21A9BF1, 0x5228F955, 0x62FAC13, 0xFA2653D9, 0xAE21069F, 131717820, 0x53DE8FFA, 0xAFD77030, -70245002, -104153465, 0xADCDEBC1, 0x51C4140B, 0x5C3414D, -1405379218, -130234328, 70596578, 0x503262A4, 0xA451F2AA, 0xF056A7EC, 207575078, 0x58580D60, 0xF1A0D143, 0xA5A78405, 1504607183, 229191305, 0xFB3B578, 0x5BB4E03E, 0xA7BD1FF4, -205894990, 0x5A429691, 0xE45C3D7, 0xF24C3C1D, -1505007269, 0xF6790BFF, 0xA27E5EB9, 0x5E77A173, 0xA70F435, -1551357930, 0xF78F7D50, 0xB86829A, 0x5F81D7DC, 1570458669, 161225067, 0xF595E6A1, -1584221209, 0x86A6FC4, 1550662274, -1604008632, 0xF463900E, 1297060773, 424199907, -448710359, -1320784785, 0x18BEB04C, 0x4CB9E50A, 0xB0B01AC0, 0xE4B74F86, 0xE6ADD477, 0xB2AA8131, 0x4EA37EFB, 0x1AA42BBD, 0xB35CF79E, 0xE75BA2D8, 458382610, 0x4F550854, 0x1F676AF0, 0x4B603FB6, 0xB769C07C, -479292102, 1251363097, 0x1E911C5F, 0xE298E395, 0xB69FB6D3, -1266340574, 0xE0827864, 478906286, 0x488CD2E8, 0xE1740ECB, -1250731123, 0x497AA447, 0x1D7DF101, 0xE91E610F, 0xBD193449, 0x4110CB83, 353869509, 0xBCEF42E6, 0xE8E817A0, 350349418, 0x40E6BD2C, 0x42FC26DD, 0x16FB739B, 0xEAF28C51, 0xBEF5D917, 0x170D0534, 0x430A5072, 0xBF03AFB8, 0xEB04FAFE, -1154049958, -281948900, 322450134, 0x473F6790, -288900173, 0xBAC0EEF5, 0x46C9113F, 315507833, 0x10D4DF88, 0x44D38ACE, 0xB8DA7504, -321052606, 0x4525FC61, 0x1122A927, -315926803, 0xB92C03AB, -1700845750, 0xCE98720C, 0x32918DC6, 0x6696D880, 0xCF6E04A3, 0x9B6951E5, 0x6760AE2F, 0x3367FB69, 830300312, 1702507998, -1720464876, 0xCD749F52, 1686913905, 0x308B1637, 0xCC82E9FD, -1736065861, 0xC8B7DE1F, 0x9CB08B59, 0x60B97493, 0x34BE21D5, 0x9D46FDF6, 0xC941A8B0, 0x3548577A, 0x614F023C, 0x635599CD, 0x3752CC8B, 0xCB5B3341, 0x9F5C6607, 916765220, 0x62A3EF62, 0x9EAA10A8, -894614034, 1053742560, 0x6AC980A6, 0x96C07F6C, -1027134934, 0x6B3FF609, 0x3F38A34F, -1020175227, 0x973609C3, -1792241102, -1054095500, 1025652926, 1764060664, 0xC0DDB1DB, 0x94DAE49D, 0x68D31B57, 1020546577, 1827024053, 954300915, 0xC4E88639, 0x90EFD37F, 0x39170F5C, 0x6D105A1A, -1860590128, 0xC51EF096, 0xC7046B67, 0x93033E21, 0x6F0AC1EB, 0x3B0D94AD, 0x92F5488E, 0xC6F21DC8, 0x3AFBE202, 0x6EFCB744, 0xD7D0B4EF, -2083003991, 0x7FDE1E63, 735660837, 0x82219706, -702102976, 707739018, 0x7E2868CC, 0x7C32F33D, 674604667, 0xD43C59B1, 0x803B0CF7, 700698836, 2110031250, -2117240232, 0xD5CA2F1E, 0x85F84DBA, 0xD1FF18FC, 0x2DF6E736, 0x79F1B270, 0xD0096E53, 0x840E3B15, 0x7807C4DF, 0x2C009199, 0x2E1A0A68, 0x7A1D5F2E, 0x8614A0E4, -770443870, 2079009153, 804027591, 0xD3E5830D, -2015177141, 0x73814645, 0x27861303, 0xDB8FECC9, -1886865009, 644900268, 1920413930, 0x8E7ECF20, 0xDA799A66, -664600169, 0x8C6454D1, 0x706DAB1B, 610991709, -1919802754, -644516040, 0x259C88F2, 1906040244, 0x21A9BF10, 0x75AEEA56, -1985538660, 0xDDA040DA, 0x74589CF9, 0x205FC9BF, 0xDC563675, -2007932109, 0x8A4BF8C2, -565400188, 0x2245524E, 0x76420708, 0xDFBADB2B, -1950511507, 2008314279, 0x23B324E1}, new int[]{0, 0x678EFD01, 0xCF1DFA02, 0xA8930703, -1680375051, 0xFC597FF4, 0x54CA78F7, 0x334485F6, 0x3243731B, 0x55CD8E1A, 0xFD5E8919, 0x9AD07418, 0xA994F1EE, 0xCE1A0CEF, 0x66890BEC, 0x107F6ED, 0x6486E636, 50862903, -1415898060, -870981323, -11443005, 0x98DF99C2, 0x304C9EC1, 0x57C263C0, 0x56C5952D, 827025452, -1713869009, -27880914, 0xCD1217D8, 0xAA9CEAD9, 0x20FEDDA, 0x658110DB, 0xC90DCC6C, 0xAE83316D, 101725806, 0x619ECB6F, 1390038681, 0x3554B398, 0x9DC7B49B, -95860326, 0xFB4EBF77, 0x9CC04276, 877872501, 1407039604, 1620655490, 0x717C083, 0xAF84C780, 0xC80A3A81, 0xAD8B2A5A, 0xCA05D75B, 1654050904, 85470553, 0x365CA8AF, 1372738990, -113159507, 0x9ECFAFAC, 0x9FC85941, 0xF846A440, 0x50D5A343, 0x375B5E42, 0x41FDBB4, 1670457013, 0xCB0221B6, -1400054601, 0x97F7EE29, -260500696, 0x58EA142B, 0x3F64E92A, 0xC206CDC, 1806602717, -1019373858, 0xA4B36BDF, 0xA5B49D32, 0xC23A6033, 0x6AA96730, 220699185, 0x3E631FC7, 1508762310, 0xF17EE5C5, 0x96F018C4, 0xF371081F, 0x94FFF51E, 0x3C6CF21D, 0x5BE20F1C, 1755745002, 0xF2877EB, -1480888088, -1070232087, 0xC1327B04, 0xA6BC8605, 0xE2F8106, 0x69A17C07, 0x5AE5F9F1, 0x3D6B04F0, 0x95F803F3, 0xF276FEF2, 0x5EFA2245, 0x3974DF44, -1847076793, -160881338, 0xC52DA0B0, 0xA2A35DB1, 170941106, 0x6DBEA7B3, 1824084318, 0xB37AC5F, 0xA3A4AB5C, -1003858339, 0xF76ED3AB, 0x90E02EAA, 947071401, 0x5FFDD4A8, 0x3A7CC473, 0x5DF23972, 0xF5613E71, 0x92EFC370, -1582610810, -970605689, 0x6EB6BC84, 0x9384185, 0x83FB768, 0x6FB14A69, -954053270, 0xA0ACB06B, 0x93E8359D, -194590564, 0x5CF5CF9F, 997929630, 0x2A03AAA3, 1301108642, 0xE51E50A1, 0x8290ADA0, -1311496106, -698690217, 0x7EC9D254, 0x19472F55, 406903224, 0x7FCE24B9, 0xD75D23BA, 0xB0D3DEBB, -2087232691, -468081076, 0x4C8AA14F, 721706062, 0x4E854C95, 0x290BB194, -2120698217, 0xE6164B96, 0xD552CE60, 0xB2DC3361, 0x1A4F3462, 2109852003, 0x7CC63F8E, 0x1B48C28F, 0xB3DBC58C, 0xD455388D, 0xE711BD7B, 0x809F407A, 0x280C4779, 0x4F82BA78, 0xE30E66CF, -2071946290, 0x2C139CCD, 1268605388, 2027545658, 0x1F57193B, 0xB7C41E38, -800398535, 0xD14D15D4, 0xB6C3E8D5, 0x1E50EFD6, 2044596951, 0x4A9A9721, 0x2D146A20, -2054722269, 0xE2099022, 0x878880F9, 0xE0067DF8, 0x48957AFB, 0x2F1B87FA, 0x1C5F020C, 0x7BD1FF0D, 0xD342F80E, 0xB4CC050F, 0xB5CBF3E2, 0xD2450EE3, 0x7AD609E0, 0x1D58F4E1, 0x2E1C7117, 1234340886, 0xE1018B15, 0x868F7614, -1108065142, 0xDA7AB98B, 0x72E9BE88, 359089033, 0x2623C67F, 1101871998, 0xE93E3C7D, -1901018756, 0x8FB73791, 0xE839CA90, 0x40AACD93, 0x27243092, 0x1460B564, 0x73EE4865, 0xDB7D4F66, 0xBCF3B267, -646798660, 0xBEFC5FBD, 0x166F58BE, 0x71E1A5BF, 0x42A52049, 0x252BDD48, 0x8DB8DA4B, -365549750, -349056601, 0x8CBF2CA6, 606874533, 0x43A2D6A4, 0x70E65352, 0x1768AE53, 0xBFFBA950, 0xD8755451, 0x74F988E6, 326596071, 0xBBE472E4, 0xDC6A8FE5, 0xEF2E0A13, -2002716910, 0x2033F011, 0x47BD0D10, 0x46BAFBFD, 0x213406FC, 0x89A701FF, 0xEE29FCFE, -580028152, 0xBAE38409, 0x1270830A, 0x75FE7E0B, 0x107F6ED0, 2012320721, 0xDF6294D2, 0xB8EC69D3, 0x8BA8EC25, -333049564, 0x44B51627, 0x233BEB26, 0x223C1DCB, 0x45B2E0CA, -316545079, 0x8AAF1AC8, -1175740610, -563781057, 0x76F6653C, 0x1178983D}, new int[]{0, 0xF20C0DFE, 0xE1F46D0D, 0x13F860F3, 0xC604ACEB, 0x3408A115, 670089702, 0xD5FCCC18, 0x89E52F27, 2078876377, 0x6811422A, -1709355052, 1340179404, -1108505038, 0xAE15EEC1, 1545200447, 0x162628BF, 0xE42A2541, 0xF7D245B2, 98453580, -803044268, 0x222E89AA, 836168025, -1009064793, 0x9FC30798, 0x6DCF0A66, 2117560981, 0x8C3B676B, 1506257779, 0xABCBA68D, -1204566402, 0x4A3FCB80, 743199102, 0xDE405C80, 0xCDB83C73, 0x3FB4318D, 0xEA48FD95, 0x1844F06B, 196907160, 0xF9B09D66, 0xA5A97E59, 1470460839, 1146950484, 0xB6511EAA, 1672336050, 0x91A1DF4C, -2108047425, 0x7055B241, 980056513, -932809665, -610396980, 697440562, 0xFC6ED52A, 241359060, 0x1D9AB827, 0xEF96B5D9, 0xB38F56E6, 1099127576, 1383807979, -1602800107, 0x758BFA0D, 0x8787F7F3, 0x947F9700, 0x66739AFE, 0x5898A2FC, 0xAA94AF02, 0xB96CCFF1, 0x4B60C20F, 0x9E9C0E17, 0x6C9003E9, 0x7F68631A, 0x8D646EE4, -780300837, 0x23718025, 0x3089E0D6, -1031410392, 0x17792130, -445305650, -158512067, 0x48141C3, 1321110083, -1129150531, 0xAF4AE74E, 0x5D46EAB0, -2001066328, 2058758998, 0x694E4BA5, -1690155429, -950295196, 0x3557A89A, 0x26AFC869, 0xD4A3C597, 0x15F098F, 0xF3530471, 0xE0AB6482, 312961404, 1960113026, 0x86D8FE7C, 0x95209E8F, 1730974577, 0xB2D05F69, 1088180887, 0x53243264, 0xA1283F9A, -47063899, 0xF3DD15B, 482718120, 0xEEC9BC56, 0x3B35704E, 0xC9397DB0, 0xDAC11D43, 0x28CD10BD, 1660083005, 0x90FED6C3, 0x8306B630, 0x710ABBCE, 0xA4F677D6, 0x56FA7A28, 0x45021ADB, 0xB70E1725, 0xEB17F41A, 0x191BF9E4, 182688023, 0xF8EF94E9, 0x2D1358F1, 0xDF1F550F, 0xCCE735FC, 1055602690, 0xB13145F8, 1128089606, 0x50C528F5, 0xA2C9250B, 2000021779, -2059803411, -1765702626, 0x64CD89E0, 0x38D46ADF, 0xCAD86721, 0xD92007D2, 0x2B2C0A2C, 0xFED0C634, 0xCDCCBCA, 0x1F24AB39, -316102969, 0xA7176D47, 0x551B60B9, 0x46E3004A, 0xB4EF0DB4, 0x6113C1AC, 0x931FCC52, 0x80E7ACA1, 0x72EBA15F, 0x2EF24260, 0xDCFE4F9E, 0xCF062F6D, 1024074387, 0xE8F6EE8B, 0x1AFAE375, 0x9028386, 0xFB0E8E78, -1652747130, 0x6F711978, 2089384331, -1903856523, 1534703725, -1451903597, -1165109920, 1216469150, 345521057, 0xE694365F, -177449300, 0x7605B52, -761489590, 0x20909AB4, 0x3368FA47, -1050347591, -1956955079, 2035757511, 0x6AAF5134, 0x98A35CCA, 0x4D5F90D2, -1085039316, 0xACABFDDF, 0x5EA7F021, 46011166, 0xF0B21EE0, 0xE34A7E13, 0x114673ED, 0xC4BABFF5, 0x36B6B20B, 0x254ED2F8, 0xD742DF06, 0xE9A9E704, 0x1BA5EAFA, 0x85D8A09, -95320073, 0x2FAD4BEF, 0xDDA14611, -833018142, 1012214556, 0x604CC823, 0x9240C5DD, -2118605522, 0x73B4A8D0, -1505205048, 0x54446936, 1203505605, 0xB5B0043B, 0xFF8FCFBB, 0xD83C245, 511419062, -327700664, 0x398B6350, -880316754, 0xD87F0E5D, 0x2A7303A3, 0x766AE09C, -2073629342, 0x979E8D91, 0x6592806F, 0xB06E4C77, 0x42624189, 1369055610, -1550439292, -974801286, 938064772, 605150071, -702687607, 65084049, -236120209, -501909604, 270105186, 0x4C00995D, 0xBE0C94A3, 0xADF4F450, 0x5FF8F9AE, 0x8A0435B6, 2013804616, 0x6BF058BB, 0x99FC5545, 0xD3C39EC5, 0x21CF933B, 0x3237F3C8, 0xC03BFE36, 365376046, 0xE7CB3FD0, 0xF4335F23, 0x63F52DD, 0x5A26B1E2, -1473594340, -1143808785, 0x49DED111, 0x9C221D09, 0x6E2E10F7, 0x7DD67004, 0x8FDA7DFA}};
            a.l = ByteBuffer.allocate(0);
        }

        a() {
            super(16);
            this.d = false;
            this.e = -287056435;
            this.f = 0;
            this.g = 0;
            this.h = 0;
        }

        @Override  // com.google.common.hash.f
        protected p p() {
            if(!this.d) {
                this.t(a.l);
            }
            return p.i(~this.e);
        }

        @Override  // com.google.common.hash.f
        protected void s(ByteBuffer byteBuffer0) {
            if(this.d) {
                throw new IllegalStateException("The behavior of calling any method after calling hash() is undefined.");
            }
            while(byteBuffer0.remaining() >= 16) {
                this.e = a.w(this.e);
                this.f = a.w(this.f);
                this.g = a.w(this.g);
                this.h = a.w(this.h);
                this.e ^= byteBuffer0.getInt();
                this.f ^= byteBuffer0.getInt();
                this.g ^= byteBuffer0.getInt();
                this.h ^= byteBuffer0.getInt();
            }
        }

        @Override  // com.google.common.hash.f
        protected void t(ByteBuffer byteBuffer0) {
            if(this.d) {
                return;
            }
            this.e = a.v(a.v(a.v(a.v(0, this.e), this.f), this.g), this.h);
            while(byteBuffer0.hasRemaining()) {
                this.e = this.e >>> 8 ^ a.i[(byteBuffer0.get() ^ this.e) & 0xFF];
            }
            this.d = true;
        }

        static int v(int v, int v1) {
            int v2 = v ^ v1;
            for(int v3 = 0; v3 < 4; ++v3) {
                v2 = a.i[v2 & 0xFF] ^ v2 >>> 8;
            }
            return v2;
        }

        static int w(int v) {
            return a.j[0][v >>> 24] ^ (a.j[3][v & 0xFF] ^ a.j[2][v >>> 8 & 0xFF] ^ a.j[1][v >>> 16 & 0xFF]);
        }
    }

    static final q a;

    static {
        com.google.common.hash.j.a = new com.google.common.hash.j();
    }

    @Override  // com.google.common.hash.q
    public int h() {
        return 0x20;
    }

    @Override  // com.google.common.hash.q
    public s i() {
        return new a();
    }

    @Override
    public String toString() {
        return "Hashing.crc32c()";
    }
}

